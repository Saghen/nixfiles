# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # Boot
  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/50F9-7C0B";
    fsType = "vfat";
  };

  # Root
  boot.initrd.luks.devices."luks-1f9e8a13-0706-49fa-b0d3-ef7cdfd17c16".device =
    "/dev/disk/by-uuid/1f9e8a13-0706-49fa-b0d3-ef7cdfd17c16";
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/21840175-0805-4dab-9497-536799b527cb";
    fsType = "btrfs";
    options = [ "subvol=@" "noatime" ];
  };

  # Swap
  # NOTE: NixOS setup doesn't insert this luks device by default which leads to long boot times
  # while it waits for the disk to appear.
  # You can get the UUID of the swap partition by running `lsblk -f` and looking for the UUID
  boot.initrd.luks.devices."luks-b003795a-f145-4b70-8bdb-79817697732b".device =
    "/dev/disk/by-uuid/b003795a-f145-4b70-8bdb-79817697732b";
  swapDevices =
    [{ device = "/dev/disk/by-uuid/11546c0d-92de-40cf-b136-4a55a09a7cf5"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
